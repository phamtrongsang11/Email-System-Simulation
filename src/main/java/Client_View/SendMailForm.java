/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client_View;

import Client_Controller.ClientController;
import Common.Validation;
import Model.Mail;
import Model.MailReceived;
import Model.ObjectWrapper;
import Model.Status;
import Model.User;
import java.awt.Component;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.font.TextAttribute;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.HTMLWriter;

/**
 *
 * @author phamt
 */
public class SendMailForm extends javax.swing.JFrame {

    private ClientController mySocket;
    private MainView view;
    private ArrayList<User> toList;
    private ArrayList<String> nameToList;
    private ArrayList<Mail> replies;
    private String domain;

    //font
    private String font = "Time New Roman";
    private int size = 14;
    private int style = Font.PLAIN;
    Map<TextAttribute, Integer> fontAttributes = new HashMap<TextAttribute, Integer>();
    private String fontName[];
    private Integer array[];

    /**
     * Creates new form Mail_Box_UI
     */
    public SendMailForm() {
        initComponents();
        customInit();
    }

    public SendMailForm(ClientController socket, MainView view, String domain) {
        mySocket = socket;
        initComponents();
        this.view = view;
        toList = new ArrayList<>();
        replies = new ArrayList<>();
        nameToList = new ArrayList<>();
        this.domain = domain;
        customInit();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    public SendMailForm(ClientController socket, ArrayList<Mail> replies, MainView view, String domain) {
        mySocket = socket;
        initComponents();
        this.view = view;
        toList = new ArrayList<>();
        this.replies = replies;
        this.domain = domain;
        initReplies();
        customInit();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        btnSend = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        txtDomain = new javax.swing.JTextField();
        radioTo = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMultiple = new javax.swing.JTextField();
        txtDomainBcc = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        choseBcc = new javax.swing.JRadioButton();
        choseCc = new javax.swing.JRadioButton();
        radioMulti = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtReply = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel13 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbFont = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cbSize = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        btnBold = new javax.swing.JButton();
        btnItalic = new javax.swing.JButton();
        btnUnder = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textContent = new javax.swing.JEditorPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        btnAddFile = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        dateTimePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(34, 39, 54));
        jPanel1.setPreferredSize(new java.awt.Dimension(861, 600));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel15.setBackground(new java.awt.Color(34, 39, 54));

        btnSend.setBackground(new java.awt.Color(98, 110, 212));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/send.png"))); // NOI18N
        btnSend.setText("Send");
        btnSend.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        jPanel15.add(btnSend);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(34, 39, 54));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jPanel6.setBackground(new java.awt.Color(34, 39, 54));

        jPanel2.setBackground(new java.awt.Color(34, 39, 54));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 40));

        jLabel1.setText("To");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel1);

        txtTo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTo.setEnabled(false);
        txtTo.setPreferredSize(new java.awt.Dimension(260, 30));
        txtTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtToFocusLost(evt);
            }
        });
        jPanel2.add(txtTo);

        txtDomain.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDomain.setText("@smail.com");
        txtDomain.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDomain.setEnabled(false);
        txtDomain.setPreferredSize(new java.awt.Dimension(110, 30));
        jPanel2.add(txtDomain);

        buttonGroup1.add(radioTo);
        radioTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioToActionPerformed(evt);
            }
        });
        jPanel2.add(radioTo);

        jPanel4.setBackground(new java.awt.Color(34, 39, 54));
        jPanel4.setPreferredSize(new java.awt.Dimension(500, 40));

        jLabel3.setText("MULTIPLE");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jLabel3);

        txtMultiple.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMultiple.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMultiple.setEnabled(false);
        txtMultiple.setPreferredSize(new java.awt.Dimension(330, 30));
        txtMultiple.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMultipleFocusLost(evt);
            }
        });
        jPanel4.add(txtMultiple);

        txtDomainBcc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDomainBcc.setText("@smail.com");
        txtDomainBcc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDomainBcc.setEnabled(false);
        txtDomainBcc.setPreferredSize(new java.awt.Dimension(110, 30));
        jPanel4.add(txtDomainBcc);

        jPanel16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel16.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        buttonGroup2.add(choseBcc);
        choseBcc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        choseBcc.setSelected(true);
        choseBcc.setEnabled(false);
        choseBcc.setLabel("BCC");
        jPanel16.add(choseBcc);

        buttonGroup2.add(choseCc);
        choseCc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        choseCc.setText("CC");
        choseCc.setEnabled(false);
        jPanel16.add(choseCc);

        jPanel4.add(jPanel16);

        buttonGroup1.add(radioMulti);
        radioMulti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMultiActionPerformed(evt);
            }
        });
        jPanel4.add(radioMulti);

        jPanel12.setBackground(new java.awt.Color(34, 39, 54));
        jPanel12.setPreferredSize(new java.awt.Dimension(500, 40));
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        jLabel7.setText("REPLIES TO");
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel12.add(jLabel7);

        txtReply.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtReply.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtReply.setEnabled(false);
        txtReply.setPreferredSize(new java.awt.Dimension(600, 30));
        jPanel12.add(txtReply);

        jPanel3.setBackground(new java.awt.Color(34, 39, 54));
        jPanel3.setPreferredSize(new java.awt.Dimension(500, 40));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        jLabel2.setText("SUBJECT");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(jLabel2);

        txtSubject.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSubject.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtSubject.setPreferredSize(new java.awt.Dimension(600, 30));
        jPanel3.add(txtSubject);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel13.setBackground(new java.awt.Color(23, 49, 74));
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.Y_AXIS));

        jPanel8.setBackground(new java.awt.Color(34, 39, 54));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        jPanel9.setBackground(new java.awt.Color(34, 39, 54));

        jLabel5.setText("FONT");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel9.add(jLabel5);

        cbFont.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cbFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFontActionPerformed(evt);
            }
        });
        jPanel9.add(cbFont);

        jPanel8.add(jPanel9);

        jPanel11.setBackground(new java.awt.Color(34, 39, 54));

        jLabel6.setText("SIZE");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel11.add(jLabel6);

        cbSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22", "24", "26", "28", "30", "32", "34", "36", "38", "40" }));
        cbSize.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cbSize.setPreferredSize(new java.awt.Dimension(72, 30));
        cbSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSizeActionPerformed(evt);
            }
        });
        jPanel11.add(cbSize);

        jPanel8.add(jPanel11);

        jPanel10.setBackground(new java.awt.Color(34, 39, 54));

        btnBold.setBackground(new java.awt.Color(98, 110, 212));
        btnBold.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bold.png"))); // NOI18N
        btnBold.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoldActionPerformed(evt);
            }
        });
        jPanel10.add(btnBold);

        btnItalic.setBackground(new java.awt.Color(98, 110, 212));
        btnItalic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/italic.png"))); // NOI18N
        btnItalic.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItalicActionPerformed(evt);
            }
        });
        jPanel10.add(btnItalic);

        btnUnder.setBackground(new java.awt.Color(98, 110, 212));
        btnUnder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/underline.png"))); // NOI18N
        btnUnder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUnder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnderActionPerformed(evt);
            }
        });
        jPanel10.add(btnUnder);

        jPanel8.add(jPanel10);

        jPanel13.add(jPanel8);

        textContent.setPreferredSize(new java.awt.Dimension(113, 300));
        jScrollPane2.setViewportView(textContent);

        jPanel13.add(jScrollPane2);

        jPanel7.setBackground(new java.awt.Color(34, 39, 54));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.setPreferredSize(new java.awt.Dimension(500, 45));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        jLabel4.setText("ATTACHED");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel7.add(jLabel4);

        txtPath.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPath.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPath.setEnabled(false);
        txtPath.setPreferredSize(new java.awt.Dimension(320, 30));
        jPanel7.add(txtPath);

        btnAddFile.setBackground(new java.awt.Color(98, 110, 212));
        btnAddFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddFile.setForeground(new java.awt.Color(255, 255, 255));
        btnAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N
        btnAddFile.setText("File");
        btnAddFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFileActionPerformed(evt);
            }
        });
        jPanel7.add(btnAddFile);

        jPanel13.add(jPanel7);

        jPanel14.setBackground(new java.awt.Color(34, 39, 54));
        jPanel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel14.setPreferredSize(new java.awt.Dimension(500, 45));
        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        jLabel8.setText("SCHEDULE");
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel14.add(jLabel8);

        dateTimePicker.setMinimumSize(new java.awt.Dimension(228, 28));
        dateTimePicker.setPreferredSize(new java.awt.Dimension(300, 28));
        jPanel14.add(dateTimePicker);

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/time.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBackground(new java.awt.Color(98, 110, 212));
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setToolTipText("");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel14.add(btnReset);

        jPanel13.add(jPanel14);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed

        if (this.checkEmptyInput()) {
            String subject = txtSubject.getText();
//            String content = textContent.getText();
            String content = convertStringToHTML(textContent.getText());
            Mail mail;
            if (replies.isEmpty()) {
                ArrayList<MailReceived> recList = new ArrayList<>();
                System.out.println("toList: " + toList);
                for (User u : toList) {
                    MailReceived rec = new MailReceived(u);
                    recList.add(rec);
                }

                mail = new Mail(subject, content, view.getUser(), recList);
                if (toList.size() > 1) {
                    if (choseBcc.isSelected()) {
                        mail.setIsCC(false);
                    } else {
                        mail.setIsCC(true);
                    }
                }
            } else {
                ArrayList<User> replyTo = new ArrayList<>();
                for (Mail rep : replies) {
                    boolean flag = false;
                    for (User u : replyTo) {
                        if (u.getId() == rep.getFormUser().getId()) {
                            flag = true;
                            break;
                        }
                    }
                    if (!flag) {
                        replyTo.add(rep.getFormUser());
                    }
                }

                ArrayList<MailReceived> recList = new ArrayList<>();
                for (User u : replyTo) {
                    MailReceived rec = new MailReceived(u);
                    recList.add(rec);
                }
                mail = new Mail(subject, content, view.getUser(), recList);
                mail.setRepList(replies);
            }

            if (!dateTimePicker.getTimePicker().toString().isBlank()) {
                String dateTime = this.dateTimePicker.getDatePicker().getDateStringOrEmptyString() + " " + this.dateTimePicker.getTimePicker().getTimeStringOrEmptyString();
                mail.setSchedule(dateTime);
                
                for (MailReceived rec : mail.getToUser()) {
                   rec.getStatus().setId(ObjectWrapper.SCHEDULE_LIST);
                }
            }

            if (!txtPath.getText().isEmpty()) {
                String path = txtPath.getText();

                String time = getCurrentTime().replaceAll("\\s+", "_");
                String fileName = path.substring(path.lastIndexOf(File.separator) + 1);
                String pathNew = time + "_" + fileName;

                mySocket.sendData(new ObjectWrapper(ObjectWrapper.INIT_SEND_FILE, pathNew));
                mySocket.ft.sendFile("", txtPath.getText());

                File file = new File(path);
                Double fileLength = file.length() + 0.0;
                Double sizeInMb = (Double) (fileLength / (1024 * 1024));

                sizeInMb = (double) Math.round(sizeInMb * 100000d) / 100000d;

                mail.setSize(sizeInMb);
                mail.setFile(pathNew);
            }

            mySocket.sendData(new ObjectWrapper(ObjectWrapper.SEND_MAIL, mail));
        } else {
            JOptionPane.showMessageDialog(this, "Please enter all input required!!!");
        }

    }//GEN-LAST:event_btnSendActionPerformed

    private void txtToFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtToFocusLost
        if (!txtTo.getText().isEmpty()) {

            String to = txtTo.getText() + txtDomain.getText();

            if (to.equals(view.getUser().getEmail())) {
                JOptionPane.showMessageDialog(this, "You can not send to yourself");
                txtTo.setText("");
            } else if (!Validation.validationMail(to)) {
                JOptionPane.showMessageDialog(this, "This email is invalid");
                txtTo.setText("");

            } else {
                mySocket.sendData(new ObjectWrapper(ObjectWrapper.CHECK_RECEPIENT, to));
            }

        }
    }//GEN-LAST:event_txtToFocusLost

    private void txtMultipleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMultipleFocusLost
        String input = txtMultiple.getText().replaceAll("\\s+", "");
        nameToList.clear();
        toList.clear();
        if (!input.isEmpty()) {
            StringTokenizer st = new StringTokenizer(input, ",");
            while (st.hasMoreTokens()) {
                String email = st.nextToken() + txtDomainBcc.getText();
                if (!Validation.validationMail(email)) {
                    JOptionPane.showMessageDialog(this, "Some email in this list is invalid");
                    txtMultiple.setText("");
                    return;
                }
                nameToList.add(email);
            }
            if(nameToList.contains(view.getUser().getEmail())){
                JOptionPane.showMessageDialog(this, "You can not send to yourself");
                txtMultiple.setText("");
                return;
            }
            System.out.println("nameto: " + nameToList);
            mySocket.sendData(new ObjectWrapper(ObjectWrapper.CHECK_RECEPIENTS, nameToList));
        }
    }//GEN-LAST:event_txtMultipleFocusLost

    private void radioToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioToActionPerformed
        txtTo.setEnabled(true);
        txtMultiple.setEnabled(false);
        choseBcc.setEnabled(false);
        choseCc.setEnabled(false);
        replies.clear();
        txtReply.setText("");
    }//GEN-LAST:event_radioToActionPerformed

    private void radioMultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMultiActionPerformed
        txtMultiple.setEnabled(true);
        txtTo.setEnabled(false);
        txtTo.setText("");
        choseBcc.setEnabled(true);
        choseCc.setEnabled(true);
    }//GEN-LAST:event_radioMultiActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        this.dateTimePicker.clear();

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFileActionPerformed
        String fileName = getFile("");
        txtPath.setText(fileName);
        System.out.println(fileName);
    }//GEN-LAST:event_btnAddFileActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        removeOutOfActiveUI();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void btnBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoldActionPerformed
        style = Font.BOLD;
        editFont();
    }//GEN-LAST:event_btnBoldActionPerformed

    private void btnItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItalicActionPerformed
        style = Font.ITALIC;
        editFont();
    }//GEN-LAST:event_btnItalicActionPerformed

    private void btnUnderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnderActionPerformed
        if (fontAttributes.isEmpty()) {
            fontAttributes.putIfAbsent(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        } else {
            fontAttributes.clear();
        }
        editFont();

    }//GEN-LAST:event_btnUnderActionPerformed

    private void cbFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFontActionPerformed
        editFont();
    }//GEN-LAST:event_cbFontActionPerformed

    private void cbSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSizeActionPerformed
        editFont();
    }//GEN-LAST:event_cbSizeActionPerformed

    public void editFont() {
        font = fontName[(int) cbFont.getSelectedItem() - 1];
        String sizeString = cbSize.getSelectedItem().toString();
        size = Integer.parseInt(sizeString);
        Font myFont = new Font(font, style, size).deriveFont(fontAttributes);
        textContent.setFont(myFont);
    }

//    private void outputHTMLfile() {
//        File f = new File("TestFile.txt");
//        try {
//            BufferedOutputStream br = new BufferedOutputStream(new FileOutputStream(f));
//            HTMLEditorKit kit = new HTMLEditorKit();
//            kit.write(br, (HTMLDocument) textContent.getDocument(), 0, ((HTMLDocument) textContent.getDocument()).getLength());
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
//
//    private String writeSelection() {
//        StringWriter buf = new StringWriter();
//        HTMLWriter writer = new HTMLWriter(buf,
//                (HTMLDocument) textContent.getDocument(), textContent.getSelectionStart(), textContent.getSelectionEnd());
//        try {
//            writer.write();
//        } catch (IOException | BadLocationException ex) {
//            ex.printStackTrace();
//        }
//        return buf.toString();
//    }

    public String convertStringToHTML(String content) {
        String htmlContent = "<font face=\"" + font + "\" size=\"" + cbSize.getSelectedItem().toString() + "\">" + textContent.getText() + "</font>";
        if (style == Font.BOLD) {
            htmlContent = "<b>" + htmlContent + "</b>";
        } else if (style == Font.ITALIC) {
            htmlContent = "<i>" + htmlContent + "</i>";
        }
        if (!fontAttributes.isEmpty()) {
            htmlContent = "<u>" + htmlContent + "</u>";
        }
        htmlContent = "<html>" + htmlContent + "<html>";
        return htmlContent;
    }

    public void receivedData(ObjectWrapper data) {

        if (!data.getData().equals("false")) {
            JOptionPane.showMessageDialog(this, "Send mail succesfully!");
            removeOutOfActiveUI();
            this.dispose();

        } else {
            JOptionPane.showMessageDialog(this, "Send mail fail!");
        }
    }

    public void removeOutOfActiveUI() {
        ArrayList<ObjectWrapper> activeFunc = mySocket.getActiveUI();
        for (int i = 0; i < activeFunc.size(); i++) {
            if (activeFunc.get(i).getData().equals((Object) this)) {
                activeFunc.remove(i);
            }
        }
    }

    public void checkRecipient(ObjectWrapper data) {
        if ((int) data.getData() != 0) {
//            JOptionPane.showMessageDialog(this, "User exist");
            User user = new User();
            user.setId((int) data.getData());
            user.setEmail(txtTo.getText() + txtDomain.getText());

            if (!toList.contains(user)) {
                toList.add(user);
            }
        } else {
            JOptionPane.showMessageDialog(this, "User not exist!!!");
            txtTo.setText("");
            toList.clear();
        }
    }

    public void checkRecipients(ObjectWrapper data) {
        if (data.getData() instanceof ArrayList) {
            ArrayList<Integer> idList = (ArrayList<Integer>) data.getData();
            if (!idList.isEmpty()) {
                for (int i = 0; i < idList.size(); i++) {
                    User user = new User();
                    user.setId(idList.get(i));
                    user.setEmail(nameToList.get(i));
                    if (!toList.contains(user)) {
                        toList.add(user);
                    }

                }
                System.out.println("abc" + toList);
            } else {
                JOptionPane.showMessageDialog(this, "Your list had invalid user!!!");
                txtMultiple.setText("");
            }
        }
    }

    public String getCurrentTime() {
        java.util.Date dt = new java.util.Date();
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
        String currentTime = sdf.format(dt);
        return currentTime;
    }

    public String getFile(String path) {

        JFileChooser chooser = new JFileChooser(path);
        chooser.setDialogTitle("Select File");
//        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
//        chooser.setFileFilter(fnef);
        int imageChooser = chooser.showOpenDialog(null);
        if (imageChooser == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            String absolutePath = f.getAbsolutePath();
//            return absolutePath.substring(absolutePath.lastIndexOf(File.separator) + 1);
            return absolutePath;
        }

        return null;
    }

    public void setReplies(ArrayList<Mail> replies) {
        this.replies = replies;
    }

    public void customInit() {
        txtDomain.setText("@" + domain);
        txtDomainBcc.setText("@" + domain);
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        fontName = ge.getAvailableFontFamilyNames();
        array = new Integer[fontName.length];
        for (int i = 1; i <= fontName.length; i++) {
            array[i - 1] = i;
        }
        cbFont.setModel(new javax.swing.DefaultComboBoxModel(array));
        ComboBoxRenderar renderar = new ComboBoxRenderar();
        cbFont.setRenderer(renderar);

//        textContent.setContentType( "text/html" );
    }

    public void initReplies() {
        if (!replies.isEmpty()) {
            String repTo = "";
            for (Mail m : replies) {
                repTo += m.getTitle()+ "-" + m.getFormUser().getEmail() + ", ";
            }
            repTo = repTo.substring(0, repTo.length() - 2);
            txtReply.setText(repTo);
        }

    }

    public void getFileName(ObjectWrapper data) {

    }

    public boolean checkEmptyInput() {
        if (radioTo.isSelected() && txtTo.getText().isEmpty()) {
            return false;
        }
        if (radioMulti.isSelected() && txtMultiple.getText().isEmpty()) {
            return false;
        }
        if (txtSubject.getText().isEmpty() || textContent.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    private class ComboBoxRenderar extends JLabel implements ListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            int offset = ((Integer) value).intValue() - 1;
            String name = fontName[offset];
            setText(name);
            setFont(new Font(name, Font.PLAIN, 18));
            return this;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMailForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnBold;
    private javax.swing.JButton btnItalic;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUnder;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbFont;
    private javax.swing.JComboBox<String> cbSize;
    private javax.swing.JRadioButton choseBcc;
    private javax.swing.JRadioButton choseCc;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton radioMulti;
    private javax.swing.JRadioButton radioTo;
    private javax.swing.JEditorPane textContent;
    private javax.swing.JTextField txtDomain;
    private javax.swing.JTextField txtDomainBcc;
    private javax.swing.JTextField txtMultiple;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtReply;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
